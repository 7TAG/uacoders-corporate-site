---
import PageHeader from "@/components/core/PageHeader.astro";
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { getEntry } from "astro:content";
const entry = await getEntry("contact", "index");
const { contact_form_action } = config.params;


---

<Base
  entry_keys={["contact", "index"]}
>
  <section class=" pb-6 pt-16">
    <div class="container"><PageHeader page_data={entry.data} /></div>
  </section>

  <section class="section pt-0">
    <div class="container">
      <div class="row">
        <div id="errorContainer" class="md:col-12 md:order-1 grid place-content-center">
        </div>
        <div id="formContainer" class="md:col-12 md:order-1 grid place-content-center">
          <form id="contactForm" class="lg:max-w-[484px]"  >
            <div class="form-group mb-5">
              <label class="form-label" for="name">Full Name</label>
              <input  class="form-control"  type="text"   id="name" name="name" placeholder="Your Full Name" required  />
            </div>
            <div class="form-group mb-5">
              <label class="form-label" for="eamil">Email Adrdess</label>
              <input class="form-control" type="text" id="email" name="email" type="email" placeholder="Your  Email Address" required  />
            </div>
            <div class="form-group mb-5">
              <label class="form-label" for="reason">Reason/Purpose</label>
              <select id="reason" name="reason" id="reason" class="form-select" required>
                <option value="">Select purpose/reson</option>
                <option value="project">I have project/task for you</option>
                <option value="Other"></option>
              </select>
            </div>
            <div class="form-group mb-5">
              <label class="form-label" for="message">Message Here</label>
              <textarea
                class="form-control h-[150px]"
                id="message"
                name="message"
                required
                cols="30"
                rows="10"></textarea>
            </div>
            <input class="btn-primary block w-full" type="submit" value="Send Message"
            />
          </form>
        </div>
      </div>
    </div>
  </section>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const form = document.getElementById("contactForm");
  const formContainer = document.getElementById("formContainer");
  const errorContainer = document.getElementById("errorContainer");

  if (form instanceof HTMLFormElement && formContainer && errorContainer) {
    form.addEventListener("submit", async function (event) {
      event.preventDefault(); // Prevent form from reloading the page
      
      const formData = new FormData(form);

      try {
        const response = await fetch("https://contact.uacoders.com/", {
          method: "POST",
          body: formData
        });
        const result = await response.text();
          errorContainer.innerHTML = "**";
          let message = "";
          if (result === "200") {
            message = "<p style='color:blue;'>Your message was sent successfully</p>";
            formContainer.innerHTML = message;
          } else {
            switch (result) {
              case "101":
                message = "Please fill Email field";
                break;
              case "102":
                message = "Please fill Name field";
                break;
              case "103":
                message = "Please fill Reason field";
                break;
              case "104":
                message = "Please fill Message field";
                break;
              default:
                message = "An error happened";
            }
            message = `<p style='color:red;'>${message}</p>`;
            errorContainer.innerHTML=message;
          }
          
      } catch (error) {
        console.error("Error submitting form:", error);
        if (formContainer) {
          errorContainer.innerHTML = `<p style='color:red;'>Failed to send message. Please try again.</p>`;
        }
      }
    });
  }
});
</script>
</Base>
